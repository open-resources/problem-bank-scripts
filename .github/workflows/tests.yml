
name: Tests

on:
  push:
    branches: [main]
    paths:
      - "tests/**"
      - "src/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/tests.yml"
  pull_request:
    branches: [main]
    paths:
      - "tests/**"
      - "src/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/tests.yml"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  merge_group:

permissions:
  contents: read

jobs:
  schema:
    outputs:
      valid: ${{ steps.check-schema.outputs.schema }}
      schema: ${{ steps.check-schema.outputs.schema }}
    runs-on: ubuntu-latest
    concurrency:
      group: schema-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Download latest info.json schema
        run: |
          curl -sSL https://raw.githubusercontent.com/PrairieLearn/PrairieLearn/master/apps/prairielearn/src/schemas/schemas/infoQuestion.json > latestSchema.json
      - name: Check schema
        id: check-schema
        run: |
          echo "schema=latestSchema.json" >> "$GITHUB_OUTPUT"
          diff latestSchema.json tests/infoSchema.json
          if [ $? -eq 0 ]; then
            echo "valid=true" >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          fi
      - name: Comment if out of date
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            core.error(
              "The info.json schema is out of date. Please update it to match the latest schema from PrairieLearn.",
              {
                title: "Schema out of date",
                file: "tests/infoSchema.json",
              }
            );


  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Minimum supported; Maybe add in some newer version to test things won't break if used on newer versions of python?
        python_version: ["3.8"] #, "3.x"] 
    concurrency:
      group: tests-${{ github.ref }}-${{ matrix.python_version }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
          cache: poetry
      - name: Install dependencies
        run: |
          poetry install --with dev
      - name: Run tests
        run: |
          poetry run pytest tests
      - name: Upload generated files
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-generated-files-${{ github.event_name }}-${{ matrix.python_version }}
          path: tests/test_question_templates/question_generated_outputs/
          if-no-files-found: ignore
          retention-days: 5
